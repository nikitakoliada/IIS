@model IIS.ViewModels.EquipmentViewModel

@{
ViewData["Title"] = "Edit Equipment";
}

<h1>Edit Equipment</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <!-- Equipment fields -->
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="ManufactureYear" class="control-label"></label>
                <input asp-for="ManufactureYear" class="form-control" />
                <span asp-validation-for="ManufactureYear" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="PurchaseDate" class="control-label"></label>
                <input asp-for="PurchaseDate" class="form-control" />
                <span asp-validation-for="PurchaseDate" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="Image" class="control-label"></label>
                <input asp-for="Image" class="form-control" />
                <span asp-validation-for="Image" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="MaxRentalTime" class="control-label"></label>
                <input asp-for="MaxRentalTime" class="form-control" />
                <span asp-validation-for="MaxRentalTime" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StudioId" class="control-label"></label>
                <select asp-for="StudioId" class="form-control" asp-items="ViewBag.StudioId"></select>
                <span asp-validation-for="StudioId" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="EquipmentTypeId" class="control-label"></label>
                <select asp-for="EquipmentTypeId" class="form-control" asp-items="ViewBag.EquipmentTypeId"></select>
                <span asp-validation-for="EquipmentTypeId" class="text-danger"></span>
            </div>

            <!-- Rental Intervals -->
            <div class="form-group">
                <label class="control-label">Add Rental Interval</label>
                <button type="button" class="btn btn-secondary" onclick="openDateTimeModal()">+</button>
            </div>

            <div id="selectedIntervalsContainer" class="mt-3">
                @if (Model.RentalDayIntervals != null && Model.RentalDayIntervals.Any())
                {
                @for (int i = 0; i < Model.RentalDayIntervals.Count; i++)
                {
                <div class="badge bg-secondary m-1">
                    Day: @Model.RentalDayIntervals[i].DayOfWeek,
                    Place: @Model.RentalDayIntervals[i].Place,
                    Start: @Model.RentalDayIntervals[i].StartTime,
                    End: @Model.RentalDayIntervals[i].EndTime

                    <!-- Hidden inputs for binding -->
                    <input type="hidden" name="RentalDayIntervals[@i].DayOfWeek" value="@Model.RentalDayIntervals[i].DayOfWeek" />
                    <input type="hidden" name="RentalDayIntervals[@i].Place" value="@Model.RentalDayIntervals[i].Place" />
                    <input type="hidden" name="RentalDayIntervals[@i].StartTime" value="@Model.RentalDayIntervals[i].StartTime" />
                    <input type="hidden" name="RentalDayIntervals[@i].EndTime" value="@Model.RentalDayIntervals[i].EndTime" />
                </div>
                }
                }
            </div>

            <div class="form-group mt-3">
                <input type="submit" value="Save Changes" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<!-- Modal Popup for Rental Interval Picker -->
<div id="dateTimeModal" class="modal" style="display:none;">
    <div class="modal-content">
        <span class="close" onclick="closeDateTimeModal()">&times;</span>
        <h4>Select Rental Interval Details</h4>

        <!-- Day of the Week Selection -->
        <label for="dayOfWeekSelect" class="control-label">Day of the Week</label>
        <select id="dayOfWeekSelect" class="form-control">
            <option value="Sunday">Sunday</option>
            <option value="Monday">Monday</option>
            <option value="Tuesday">Tuesday</option>
            <option value="Wednesday">Wednesday</option>
            <option value="Thursday">Thursday</option>
            <option value="Friday">Friday</option>
            <option value="Saturday">Saturday</option>
        </select>

        <!-- Place of Pickup Selection -->
        <label for="pickupPlaceInput" class="control-label mt-2">Place of Pickup</label>
        <input type="text" id="pickupPlaceInput" class="form-control" placeholder="Enter pickup place" />

        <!-- Start and End Time Selection -->
        <label for="startTimeInput" class="control-label mt-2">Start Time</label>
        <input type="time" id="startTimeInput" class="form-control" />

        <label for="endTimeInput" class="control-label mt-2">End Time</label>
        <input type="time" id="endTimeInput" class="form-control" />

        <!-- Button to add the interval -->
        <button class="btn btn-primary mt-3" onclick="addRentalInterval()">Add</button>
    </div>
</div>

<style>
    /* Modal styling */
    .modal {
        position: fixed;
        z-index: 1;
        padding-top: 60px;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background-color: rgba(0,0,0,0.4);
    }
    .modal-content {
        background-color: #fefefe;
        margin: auto;
        padding: 20px;
        border: 1px solid #888;
        width: 300px;
    }
    .close {
        color: #aaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
        cursor: pointer;
    }
</style>
<script>
    function openDateTimeModal() {
        document.getElementById("dateTimeModal").style.display = "block";
    }

    function closeDateTimeModal() {
        document.getElementById("dateTimeModal").style.display = "none";
    }

    function addRentalInterval() {
        const dayOfWeek = document.getElementById("dayOfWeekSelect").value;
        const pickupPlace = document.getElementById("pickupPlaceInput").value;
        const startTime = document.getElementById("startTimeInput").value;
        const endTime = document.getElementById("endTimeInput").value;

        if (dayOfWeek && pickupPlace && startTime && endTime) {
            const intervalsContainer = document.getElementById("selectedIntervalsContainer");
            const index = intervalsContainer.childElementCount;

            // Create a new label element with selected interval details
            const intervalDiv = document.createElement("div");
            intervalDiv.className = "badge bg-secondary m-1 p-2 d-flex align-items-center";
            intervalDiv.setAttribute("data-index", index);

            const label = document.createElement("span");
            label.textContent = `Day: ${dayOfWeek}, Place: ${pickupPlace}, Start: ${startTime}, End: ${endTime}`;
            intervalDiv.appendChild(label);

            // Add delete button to remove this interval
            const deleteButton = document.createElement("button");
            deleteButton.className = "btn btn-danger btn-sm ms-2";
            deleteButton.textContent = "x";
            deleteButton.onclick = function() {
                removeRentalInterval(intervalDiv, index);
            };
            intervalDiv.appendChild(deleteButton);

            intervalsContainer.appendChild(intervalDiv);

            const form = document.querySelector("form");

            // Hidden inputs for binding
            let dayOfWeekInput = document.createElement("input");
            dayOfWeekInput.type = "hidden";
            dayOfWeekInput.name = `RentalDayIntervals[${index}].DayOfWeek`;
            dayOfWeekInput.value = dayOfWeek;
            dayOfWeekInput.setAttribute("data-index", index);
            form.appendChild(dayOfWeekInput);

            let placeInput = document.createElement("input");
            placeInput.type = "hidden";
            placeInput.name = `RentalDayIntervals[${index}].Place`;
            placeInput.value = pickupPlace;
            placeInput.setAttribute("data-index", index);
            form.appendChild(placeInput);

            let startTimeInput = document.createElement("input");
            startTimeInput.type = "hidden";
            startTimeInput.name = `RentalDayIntervals[${index}].StartTime`;
            startTimeInput.value = startTime;
            startTimeInput.setAttribute("data-index", index);
            form.appendChild(startTimeInput);

            let endTimeInput = document.createElement("input");
            endTimeInput.type = "hidden";
            endTimeInput.name = `RentalDayIntervals[${index}].EndTime`;
            endTimeInput.value = endTime;
            endTimeInput.setAttribute("data-index", index);
            form.appendChild(endTimeInput);

            closeDateTimeModal();
            document.getElementById("pickupPlaceInput").value = "";
            document.getElementById("startTimeInput").value = "";
            document.getElementById("endTimeInput").value = "";
        }
    }

    function removeRentalInterval(intervalDiv, index) {
        intervalDiv.remove();

        const form = document.querySelector("form");
        const inputs = form.querySelectorAll(`input[data-index='${index}']`);

        inputs.forEach(input => input.remove());
    }
</script>
